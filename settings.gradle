rootProject.name = "fulcrum"

include "fulcrum-assert"
project(":fulcrum-assert").projectDir = new File(settingsDir, "assert")

include "fulcrum-await"
project(":fulcrum-await").projectDir = new File(settingsDir, "await")

include "fulcrum-concat"
project(":fulcrum-concat").projectDir = new File(settingsDir, "concat")

include "fulcrum-docker-compose"
project(":fulcrum-docker-compose").projectDir = new File(settingsDir, "docker-compose")

include "fulcrum-junit"
project(":fulcrum-junit").projectDir = new File(settingsDir, "junit")

include "fulcrum-shell"
project(":fulcrum-shell").projectDir = new File(settingsDir, "shell")

include "fulcrum-version"
project(":fulcrum-version").projectDir = new File(settingsDir, "version")

include "fulcrum-func"
project(":fulcrum-func").projectDir = new File(settingsDir, "func")

include "fulcrum-select"
project(":fulcrum-select").projectDir = new File(settingsDir, "select")

include "fulcrum-resolver"
project(":fulcrum-resolver").projectDir = new File(settingsDir, "resolver")

include "fulcrum-node-queue"
project(":fulcrum-node-queue").projectDir = new File(settingsDir, "node-queue")

include "fulcrum-scheduler"
project(":fulcrum-scheduler").projectDir = new File(settingsDir, "scheduler")

include "fulcrum-worker"
project(":fulcrum-worker").projectDir = new File(settingsDir, "worker")

include "fulcrum-testmark"
project(":fulcrum-testmark").projectDir = new File(settingsDir, "testmark")

include "fulcrum-flow"
project(":fulcrum-flow").projectDir = new File(settingsDir, "flow")

include "fulcrum-launcher"
project(":fulcrum-launcher").projectDir = new File(settingsDir, "launcher")

include "fulcrum-props"
project(":fulcrum-props").projectDir = new File(settingsDir, "props")

include "fulcrum-threads"
project(":fulcrum-threads").projectDir = new File(settingsDir, "threads")

include "fulcrum-parallel"
project(":fulcrum-parallel").projectDir = new File(settingsDir, "parallel")

include "fulcrum-nanoclock"
project(":fulcrum-nanoclock").projectDir = new File(settingsDir, "nanoclock")

include "fulcrum-retry"
project(":fulcrum-retry").projectDir = new File(settingsDir, "retry")

include "fulcrum-classes"
project(":fulcrum-classes").projectDir = new File(settingsDir, "classes")

include "fulcrum-jgroups"
project(":fulcrum-jgroups").projectDir = new File(settingsDir, "jgroups")

include "fulcrum-zlg"
project(":fulcrum-zlg").projectDir = new File(settingsDir, "zlg")
